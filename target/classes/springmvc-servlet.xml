<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- 开启注解的处理器适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean> -->
	<!-- 开启注解的处理器映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean> -->
	
	<!-- 开启扫描 -->
	<context:component-scan base-package="com.nc.controller,com.nc.view"></context:component-scan>
	<!-- 使用mvc:annotation-driven代替上面的映射器和适配器 -->
	<mvc:annotation-driven conversion-service="dataConversion"/>
	<!-- 开启静态资源处理 -->
	<mvc:default-servlet-handler />
	<!-- 开启AspectJ注解扫描,支持跨文件扫描 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 默认配置视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="1"></property>
	</bean>
	<!-- 对象视图解析器 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="0"></bean>
	
	<!-- 自定义转换器 -->
	<bean id="dataConversion" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.nc.conversion.DataConversion"></bean>
			</list>
		</property>
	</bean>
	
	<!-- 配置国际化资源属性文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="message"></property>
	</bean>
	
	<!-- 配置本地化解析器 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	</bean>
	<!-- 配置本地化拦截器 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"></bean>
	</mvc:interceptors>
	
	<!-- 配置 文件上传 多部分解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSize" value="5242880"></property>
	</bean>
	<!-- 配置登录拦截器 -->
<!-- 	<mvc:interceptors> -->
<!-- 		<mvc:interceptor> -->
<!-- 			<mvc:mapping path="/*"/> -->
<!-- 			<mvc:exclude-mapping path="/changeLanguage"/> -->
<!-- 			<mvc:exclude-mapping path="/relogin"/> -->
<!-- 			<mvc:exclude-mapping path="/login"/> -->
<!-- 			<bean class="com.nc.interceptor.LoginInterceptor"></bean> -->
<!-- 		</mvc:interceptor> -->
<!-- 	</mvc:interceptors> -->

	<!-- 配置SimpleMappingExceptionResolver 异常处理 -->
	<bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error</prop>
			</props>
		</property>
		<property name="exceptionAttribute" value="e"></property>
	</bean>
	
	<!-- shiro注解 -->
 	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
	<!-- Secure Spring remoting:  Ensure any Spring Remoting method invocations can be associated
         with a Subject for security checks. -->
    <bean id="secureRemoteInvocationExecutor" class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
	
</beans>
